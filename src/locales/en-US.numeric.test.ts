import { expect, it } from 'vitest'
import { formatNumeric, parseNumeric } from '../format/numeric'

it('parsing zero values', () => {
  expect(parseNumeric('')).toBe(0)
  expect(parseNumeric('0')).toBe(0)
  expect(parseNumeric('0.')).toBe(0)
  expect(parseNumeric('.0')).toBe(0)
  expect(parseNumeric('0.0')).toBe(0)
  expect(parseNumeric('000.')).toBe(0)
  expect(parseNumeric(',000.')).toBe(0)
  expect(parseNumeric('.000')).toBe(0)
  expect(parseNumeric('000.000')).toBe(0)
  expect(parseNumeric(',000.000')).toBe(0)
})

it('formatting zero values', () => {
  expect(formatNumeric('')).toBe('0.00')
  expect(formatNumeric('0')).toBe('0.00')
  expect(formatNumeric('0.')).toBe('0.00')
  expect(formatNumeric('.0')).toBe('0.00')
  expect(formatNumeric('0.0')).toBe('0.00')
  expect(formatNumeric('000.')).toBe('0.00')
  expect(formatNumeric(',000.')).toBe('0.00')
  expect(formatNumeric('.000')).toBe('0.00')
  expect(formatNumeric('000.000')).toBe('0.00')
  expect(formatNumeric(',000.000')).toBe('0.00')

  expect(formatNumeric(0)).toBe('0.00')
})

it('parsing zero values represented in scientific notation', () => {
  expect(parseNumeric('0e+0')).toBe(0)
  expect(parseNumeric('0.e+0')).toBe(0)
  expect(parseNumeric('.0e+0')).toBe(0)
  expect(parseNumeric('0.0e+0')).toBe(0)
  expect(parseNumeric('000.e+6')).toBe(0)
  expect(parseNumeric(',000.e+6')).toBe(0)
  expect(parseNumeric('.000e+6')).toBe(0)
  expect(parseNumeric('000.000e+6')).toBe(0)
  expect(parseNumeric(',000.000e+6')).toBe(0)

  expect(parseNumeric('0e-0')).toBe(0)
  expect(parseNumeric('0.e-0')).toBe(0)
  expect(parseNumeric('.0e-0')).toBe(0)
  expect(parseNumeric('0.0e-0')).toBe(0)
  expect(parseNumeric('000.e-6')).toBe(0)
  expect(parseNumeric(',000.e-6')).toBe(0)
  expect(parseNumeric('.000e-6')).toBe(0)
  expect(parseNumeric('000.000e-6')).toBe(0)
  expect(parseNumeric(',000.000e-6')).toBe(0)
})

it('formatting zero values represented in scientific notation', () => {
  expect(formatNumeric('0e+0')).toBe('0.00')
  expect(formatNumeric('0.e+0')).toBe('0.00')
  expect(formatNumeric('.0e+0')).toBe('0.00')
  expect(formatNumeric('0.0e+0')).toBe('0.00')
  expect(formatNumeric('000.e+6')).toBe('0.00')
  expect(formatNumeric(',000.e+6')).toBe('0.00')
  expect(formatNumeric('.000e+6')).toBe('0.00')
  expect(formatNumeric('000.000e+6')).toBe('0.00')
  expect(formatNumeric(',000.000e+6')).toBe('0.00')

  expect(formatNumeric('0e-0')).toBe('0.00')
  expect(formatNumeric('0.e-0')).toBe('0.00')
  expect(formatNumeric('.0e-0')).toBe('0.00')
  expect(formatNumeric('0.0e-0')).toBe('0.00')
  expect(formatNumeric('000.e-6')).toBe('0.00')
  expect(formatNumeric(',000.e-6')).toBe('0.00')
  expect(formatNumeric('.000e-6')).toBe('0.00')
  expect(formatNumeric('000.000e-6')).toBe('0.00')
  expect(formatNumeric(',000.000e-6')).toBe('0.00')

  expect(formatNumeric(0e+6)).toBe('0.00')
  expect(formatNumeric(0e-6)).toBe('0.00')
  expect(formatNumeric(0.e+6)).toBe('0.00')
})

it('parseing negative zero values', () => {
  expect(parseNumeric('-0')).toBe(-0)
  expect(parseNumeric('-0.')).toBe(-0)
  expect(parseNumeric('-.0')).toBe(-0)
  expect(parseNumeric('-0.0')).toBe(-0)
  expect(parseNumeric('-000.')).toBe(-0)
  expect(parseNumeric('-,000.')).toBe(-0)
  expect(parseNumeric('-.000')).toBe(-0)
  expect(parseNumeric('-000.000')).toBe(-0)
  expect(parseNumeric('-,000.000')).toBe(-0)
})

it('formatting negative zero values', () => {
  expect(formatNumeric('-0')).toBe('-0.00')
  expect(formatNumeric('-0.')).toBe('-0.00')
  expect(formatNumeric('-.0')).toBe('-0.00')
  expect(formatNumeric('-0.0')).toBe('-0.00')
  expect(formatNumeric('-000.')).toBe('-0.00')
  expect(formatNumeric('-,000.')).toBe('-0.00')
  expect(formatNumeric('-.000')).toBe('-0.00')
  expect(formatNumeric('-000.000')).toBe('-0.00')
  expect(formatNumeric('-,000.000')).toBe('-0.00')

  expect(formatNumeric(-0)).toBe('-0.00')
  expect(formatNumeric(-0.0)).toBe('-0.00')
})

it('parseing negative zero values represented in scientific notation', () => {
  expect(parseNumeric('-0e+0')).toBe(-0)
  expect(parseNumeric('-0.e+0')).toBe(-0)
  expect(parseNumeric('-.0e+0')).toBe(-0)
  expect(parseNumeric('-0.0e+0')).toBe(-0)
  expect(parseNumeric('-000.e+6')).toBe(-0)
  expect(parseNumeric('-,000.e+6')).toBe(-0)
  expect(parseNumeric('-.000e+6')).toBe(-0)
  expect(parseNumeric('-000.000e+6')).toBe(-0)
  expect(parseNumeric('-,000.000e+6')).toBe(-0)

  expect(parseNumeric('-0e-0')).toBe(-0)
  expect(parseNumeric('-0.e-0')).toBe(-0)
  expect(parseNumeric('-.0e-0')).toBe(-0)
  expect(parseNumeric('-0.0e-0')).toBe(-0)
  expect(parseNumeric('-000.e-6')).toBe(-0)
  expect(parseNumeric('-,000.e-6')).toBe(-0)
  expect(parseNumeric('-.000e-6')).toBe(-0)
  expect(parseNumeric('-000.000e-6')).toBe(-0)
  expect(parseNumeric('-,000.000e-6')).toBe(-0)
})

it('formatting negative zero values represented in scientific notation', () => {
  expect(formatNumeric('-0e+0')).toBe('-0.00')
  expect(formatNumeric('-0.e+0')).toBe('-0.00')
  expect(formatNumeric('-.0e+0')).toBe('-0.00')
  expect(formatNumeric('-0.0e+0')).toBe('-0.00')
  expect(formatNumeric('-000.e+6')).toBe('-0.00')
  expect(formatNumeric('-,000.e+6')).toBe('-0.00')
  expect(formatNumeric('-.000e+6')).toBe('-0.00')
  expect(formatNumeric('-000.000e+6')).toBe('-0.00')
  expect(formatNumeric('-,000.000e+6')).toBe('-0.00')

  expect(formatNumeric('-0e-0')).toBe('-0.00')
  expect(formatNumeric('-0.e-0')).toBe('-0.00')
  expect(formatNumeric('-.0e-0')).toBe('-0.00')
  expect(formatNumeric('-0.0e-0')).toBe('-0.00')
  expect(formatNumeric('-000.e-6')).toBe('-0.00')
  expect(formatNumeric('-,000.e-6')).toBe('-0.00')
  expect(formatNumeric('-.000e-6')).toBe('-0.00')
  expect(formatNumeric('-000.000e-6')).toBe('-0.00')
  expect(formatNumeric('-,000.000e-6')).toBe('-0.00')

  expect(formatNumeric(-0.e-0)).toBe('-0.00')
  expect(formatNumeric(-0.000000e+6)).toBe('-0.00')
})

it('parseing small values', () => {
  expect(parseNumeric('1')).toBe(1)
  expect(parseNumeric('0001')).toBe(1)
  expect(parseNumeric('0,001')).toBe(1)
  expect(parseNumeric('0000001')).toBe(1)
  expect(parseNumeric('0,000,001')).toBe(1)
  expect(parseNumeric('.0001')).toBe(0.0001)
  expect(parseNumeric('0.0001')).toBe(0.0001)
  expect(parseNumeric('000.0001')).toBe(0.0001)
  expect(parseNumeric(',000.0001')).toBe(0.0001)
  expect(parseNumeric('.000000001')).toBe(0.000000001)
  expect(parseNumeric('0.000000001')).toBe(0.000000001)
  expect(parseNumeric('000000000.000000001')).toBe(0.000000001)
  expect(parseNumeric('000,000,000.000000001')).toBe(0.000000001)
})

it('formatting small values', () => {
  expect(formatNumeric('1')).toBe('1.00')
  expect(formatNumeric('0001')).toBe('1.00')
  expect(formatNumeric('0,001')).toBe('1.00')
  expect(formatNumeric('0000001')).toBe('1.00')
  expect(formatNumeric('0,000,001')).toBe('1.00')
  expect(formatNumeric('.0001')).toBe('0.00')
  expect(formatNumeric('0.0001')).toBe('0.00')
  expect(formatNumeric('000.0001')).toBe('0.00')
  expect(formatNumeric(',000.0001')).toBe('0.00')
  expect(formatNumeric('.000000001')).toBe('0.00')
  expect(formatNumeric('0.000000001')).toBe('0.00')
  expect(formatNumeric('000000000.000000001')).toBe('0.00')
  expect(formatNumeric('000,000,000.000000001')).toBe('0.00')

  expect(formatNumeric(1)).toBe('1.00')
  expect(formatNumeric(0.1)).toBe('0.10')
  expect(formatNumeric(0.189)).toBe('0.19')
  expect(formatNumeric(0.999)).toBe('1.00')
  expect(formatNumeric(0.000000001)).toBe('0.00')
})

it('parseing small values represented in scientific notation', () => {
  expect(parseNumeric('.1e-3')).toBe(0.0001)
  expect(parseNumeric('0.1e-3')).toBe(0.0001)
  expect(parseNumeric('000.1e-3')).toBe(0.0001)
  expect(parseNumeric(',000.1e-3')).toBe(0.0001)
  expect(parseNumeric('.1e-8')).toBe(0.000000001)
  expect(parseNumeric('0.1e-8')).toBe(0.000000001)
  expect(parseNumeric('000000000.1e-8')).toBe(0.000000001)
  expect(parseNumeric('000,000,000.1e-8')).toBe(0.000000001)
})

it('formatting small values represented in scientific notation', () => {
  expect(formatNumeric('.1e-3')).toBe('0.00')
  expect(formatNumeric('0.1e-3')).toBe('0.00')
  expect(formatNumeric('000.1e-3')).toBe('0.00')
  expect(formatNumeric(',000.1e-3')).toBe('0.00')
  expect(formatNumeric('.1e-8')).toBe('0.00')
  expect(formatNumeric('0.1e-8')).toBe('0.00')
  expect(formatNumeric('000000000.1e-8')).toBe('0.00')
  expect(formatNumeric('000,000,000.1e-8')).toBe('0.00')

  expect(formatNumeric(0.01e+2)).toBe('1.00')
  expect(formatNumeric(0.01999e+2)).toBe('2.00')
  expect(formatNumeric(0.1e-8)).toBe('0.00')
})

it('parseing negative small values', () => {
  expect(parseNumeric('-1')).toBe(-1)
  expect(parseNumeric('-0001')).toBe(-1)
  expect(parseNumeric('-0,001')).toBe(-1)
  expect(parseNumeric('-0000001')).toBe(-1)
  expect(parseNumeric('-0,000,001')).toBe(-1)
  expect(parseNumeric('-.0001')).toBe(-0.0001)
  expect(parseNumeric('-0.0001')).toBe(-0.0001)
  expect(parseNumeric('-000.0001')).toBe(-0.0001)
  expect(parseNumeric('-,000.0001')).toBe(-0.0001)
  expect(parseNumeric('-.000000001')).toBe(-0.000000001)
  expect(parseNumeric('-0.000000001')).toBe(-0.000000001)
  expect(parseNumeric('-000000000.000000001')).toBe(-0.000000001)
  expect(parseNumeric('-000,000,000.000000001')).toBe(-0.000000001)
})

it('formatting negative small values', () => {
  expect(formatNumeric('-1')).toBe('-1.00')
  expect(formatNumeric('-0001')).toBe('-1.00')
  expect(formatNumeric('-0,001')).toBe('-1.00')
  expect(formatNumeric('-0000001')).toBe('-1.00')
  expect(formatNumeric('-0,000,001')).toBe('-1.00')
  expect(formatNumeric('-.0001')).toBe('-0.00')
  expect(formatNumeric('-0.0001')).toBe('-0.00')
  expect(formatNumeric('-000.0001')).toBe('-0.00')
  expect(formatNumeric('-,000.0001')).toBe('-0.00')
  expect(formatNumeric('-.000000001')).toBe('-0.00')
  expect(formatNumeric('-0.000000001')).toBe('-0.00')
  expect(formatNumeric('-000000000.000000001')).toBe('-0.00')
  expect(formatNumeric('-000,000,000.000000001')).toBe('-0.00')

  expect(formatNumeric(-1)).toBe('-1.00')
  expect(formatNumeric(-1.0045)).toBe('-1.00')
  expect(formatNumeric(-1.0056)).toBe('-1.01')
})

it('parseing negative small values represented in scientific notation', () => {
  expect(parseNumeric('-100e-2')).toBe(-1)
  expect(parseNumeric('-000100e-2')).toBe(-1)
  expect(parseNumeric('-000,100e-2')).toBe(-1)
  expect(parseNumeric('-000000100e-2')).toBe(-1)
  expect(parseNumeric('-000,000,100e-2')).toBe(-1)
  expect(parseNumeric('-.1e-3')).toBe(-0.0001)
  expect(parseNumeric('-0.1e-3')).toBe(-0.0001)
  expect(parseNumeric('-.1e-8')).toBe(-0.000000001)
  expect(parseNumeric('-0.1e-8')).toBe(-0.000000001)
  expect(parseNumeric('-000000000.1e-8')).toBe(-0.000000001)
  expect(parseNumeric('-000,000,000.1e-8')).toBe(-0.000000001)
})

it('formatting negative small values represented in scientific notation', () => {
  expect(formatNumeric('-100e-2')).toBe('-1.00')
  expect(formatNumeric('-000100e-2')).toBe('-1.00')
  expect(formatNumeric('-000,100e-2')).toBe('-1.00')
  expect(formatNumeric('-000000100e-2')).toBe('-1.00')
  expect(formatNumeric('-000,000,100e-2')).toBe('-1.00')
  expect(formatNumeric('-.1e-3')).toBe('-0.00')
  expect(formatNumeric('-0.1e-3')).toBe('-0.00')
  expect(formatNumeric('-.1e-8')).toBe('-0.00')
  expect(formatNumeric('-0.1e-8')).toBe('-0.00')
  expect(formatNumeric('-000000000.1e-8')).toBe('-0.00')
  expect(formatNumeric('-000,000,000.1e-8')).toBe('-0.00')
})

it('parseing large values', () => {
  expect(parseNumeric('1000')).toBe(1000)
  expect(parseNumeric('1,000')).toBe(1000)
  expect(parseNumeric('100000')).toBe(100000)
  expect(parseNumeric(',100,000')).toBe(100000)
  expect(parseNumeric('10000000')).toBe(10000000)
  expect(parseNumeric('10,000,000')).toBe(10000000)
  expect(parseNumeric('999999999999')).toBe(999999999999)
  expect(parseNumeric(',999,999,999,999')).toBe(999999999999)
})

it('formatting large values', () => {
  expect(formatNumeric('1000')).toBe('1,000.00')
  expect(formatNumeric('1,000')).toBe('1,000.00')
  expect(formatNumeric('100000')).toBe('100,000.00')
  expect(formatNumeric(',100,000')).toBe('100,000.00')
  expect(formatNumeric('10000000')).toBe('10,000,000.00')
  expect(formatNumeric('10,000,000')).toBe('10,000,000.00')
  expect(formatNumeric('999999999999')).toBe('999,999,999,999.00')
  expect(formatNumeric(',999,999,999,999')).toBe('999,999,999,999.00')

  expect(formatNumeric(',999,999,999,999.999')).toBe('1,000,000,000,000.00')
  expect(formatNumeric(999999999999.999)).toBe('1,000,000,000,000.00')
})

it('parseing large values represented in scientific notation', () => {
  expect(parseNumeric('1e+3')).toBe(1000)
  expect(parseNumeric('10e+2')).toBe(1000)
  expect(parseNumeric('100e+1')).toBe(1000)
  expect(parseNumeric('100,000e+2')).toBe(10000000)
  expect(parseNumeric(',100,000e+2')).toBe(10000000)
  expect(parseNumeric('1e+12')).toBe(1000000000000)
})

it('formatting large values represented in scientific notation', () => {
  expect(formatNumeric('1e+3', 0)).toBe('1,000')
  expect(formatNumeric('10e+2', 0)).toBe('1,000')
  expect(formatNumeric('100e+1', 0)).toBe('1,000')
  expect(formatNumeric('100,000e+2', 0)).toBe('10,000,000')
  expect(formatNumeric(',100,000e+2', 0)).toBe('10,000,000')
  expect(formatNumeric('1e+12', 0)).toBe('1,000,000,000,000')
})

it('parseing negative large values', () => {
  expect(parseNumeric('-1000')).toBe(-1000)
  expect(parseNumeric('-1,000')).toBe(-1000)
  expect(parseNumeric('-100000')).toBe(-100000)
  expect(parseNumeric('-,100,000')).toBe(-100000)
  expect(parseNumeric('-10000000')).toBe(-10000000)
  expect(parseNumeric('-10,000,000')).toBe(-10000000)
  expect(parseNumeric('-999999999999')).toBe(-999999999999)
  expect(parseNumeric('-,999,999,999,999')).toBe(-999999999999)
})

it('formatting negative large values', () => {
  expect(formatNumeric('-1000', 3)).toBe('-1,000.000')
  expect(formatNumeric('-1,000', 3)).toBe('-1,000.000')
  expect(formatNumeric('-100000', 3)).toBe('-100,000.000')
  expect(formatNumeric('-,100,000', 3)).toBe('-100,000.000')
  expect(formatNumeric('-10000000', 3)).toBe('-10,000,000.000')
  expect(formatNumeric('-10,000,000', 3)).toBe('-10,000,000.000')
  expect(formatNumeric('-999999999999', 3)).toBe('-999,999,999,999.000')
  expect(formatNumeric('-,999,999,999,999', 3)).toBe('-999,999,999,999.000')
})

it('parseing negative large values represented in scientific notation', () => {
  expect(parseNumeric('-1e+3')).toBe(-1000)
  expect(parseNumeric('-10e+2')).toBe(-1000)
  expect(parseNumeric('-100e+1')).toBe(-1000)
  expect(parseNumeric('-100,000e+2')).toBe(-10000000)
  expect(parseNumeric('-,100,000e+2')).toBe(-10000000)
  expect(parseNumeric('-1e+12')).toBe(-1000000000000)
})

it('formatting negative large values represented in scientific notation', () => {
  expect(formatNumeric('-1e+3')).toBe('-1,000.00')
  expect(formatNumeric('-10e+2')).toBe('-1,000.00')
  expect(formatNumeric('-100e+1')).toBe('-1,000.00')
  expect(formatNumeric('-100,000e+2')).toBe('-10,000,000.00')
  expect(formatNumeric('-,100,000e+2')).toBe('-10,000,000.00')
  expect(formatNumeric('-1e+12')).toBe('-1,000,000,000,000.00')
})
